DIGEST b7e938aa9254bdc9f3258d26bbbc3202
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1478:1481 <> list
constr 1506:1508 <> nil
constr 1523:1526 <> cons
R1512:1515 Poly <> list ind
R1545:1548 Poly <> list ind
R1535:1538 Poly <> list ind
R2741:2743 Poly <> nil constr
R2793:2796 Poly <> cons constr
R3204:3207 Poly <> cons constr
R3216:3219 Poly <> cons constr
R3228:3230 Poly <> nil constr
R3232:3234 Coq.Init.Datatypes <> nat ind
R3221:3223 Coq.Init.Datatypes <> nat ind
R3209:3211 Coq.Init.Datatypes <> nat ind
def 3627:3632 <> length
R3646:3649 Poly <> list ind
R3651:3651 Poly <> X var
R3656:3658 Coq.Init.Datatypes <> nat ind
R3671:3671 Poly <> l var
R3682:3684 Poly <> nil constr
R3700:3703 Poly <> cons constr
R3712:3712 Coq.Init.Datatypes <> S constr
R3715:3720 Poly <> length def
R3722:3722 Poly <> X var
def 4259:4270 <> test_length1
R4324:4326 Coq.Init.Logic <> :type_scope:x_'='_x not
R4278:4283 Poly <> length def
R4290:4293 Poly <> cons constr
R4302:4305 Poly <> cons constr
R4314:4316 Poly <> nil constr
R4318:4320 Coq.Init.Datatypes <> nat ind
R4307:4309 Coq.Init.Datatypes <> nat ind
R4295:4297 Coq.Init.Datatypes <> nat ind
R4285:4287 Coq.Init.Datatypes <> nat ind
def 4483:4494 <> test_length2
R4541:4543 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4507 Poly <> length def
R4515:4518 Poly <> cons constr
R4531:4533 Poly <> nil constr
R4535:4538 Basics <> bool ind
R4525:4528 Basics <> true constr
R4520:4523 Basics <> bool ind
R4509:4512 Basics <> bool ind
def 4720:4722 <> app
R4744:4747 Poly <> list ind
R4749:4749 Poly <> X var
R4771:4774 Poly <> list ind
R4776:4776 Poly <> X var
R4790:4791 Poly <> l1 var
R4802:4804 Poly <> nil constr
R4814:4815 Poly <> l2 var
R4821:4824 Poly <> cons constr
R4833:4836 Poly <> cons constr
R4843:4845 Poly <> app def
R4851:4852 Poly <> l2 var
R4847:4847 Poly <> X var
R4838:4838 Poly <> X var
def 4872:4875 <> snoc
R4889:4892 Poly <> list ind
R4894:4894 Poly <> X var
R4900:4900 Poly <> X var
R4906:4909 Poly <> list ind
R4911:4911 Poly <> X var
R4925:4925 Poly <> l var
R4936:4938 Poly <> nil constr
R4948:4951 Poly <> cons constr
R4958:4960 Poly <> nil constr
R4962:4962 Poly <> X var
R4955:4955 Poly <> v var
R4953:4953 Poly <> X var
R4969:4972 Poly <> cons constr
R4981:4984 Poly <> cons constr
R4991:4994 Poly <> snoc def
R5000:5000 Poly <> v var
R4996:4996 Poly <> X var
R4986:4986 Poly <> X var
def 5020:5022 <> rev
R5036:5039 Poly <> list ind
R5041:5041 Poly <> X var
R5046:5049 Poly <> list ind
R5051:5051 Poly <> X var
R5064:5064 Poly <> l var
R5075:5077 Poly <> nil constr
R5087:5089 Poly <> nil constr
R5091:5091 Poly <> X var
R5097:5100 Poly <> cons constr
R5109:5112 Poly <> snoc def
R5117:5119 Poly <> rev def
R5121:5121 Poly <> X var
R5114:5114 Poly <> X var
def 5146:5154 <> test_rev1
R5205:5210 Coq.Init.Logic <> :type_scope:x_'='_x not
R5244:5244 Coq.Init.Logic <> :type_scope:x_'='_x not
R5162:5164 Poly <> rev def
R5171:5174 Poly <> cons constr
R5183:5186 Poly <> cons constr
R5195:5197 Poly <> nil constr
R5199:5201 Coq.Init.Datatypes <> nat ind
R5188:5190 Coq.Init.Datatypes <> nat ind
R5176:5178 Coq.Init.Datatypes <> nat ind
R5166:5168 Coq.Init.Datatypes <> nat ind
R5211:5214 Poly <> cons constr
R5223:5226 Poly <> cons constr
R5235:5237 Poly <> nil constr
R5239:5241 Coq.Init.Datatypes <> nat ind
R5228:5230 Coq.Init.Datatypes <> nat ind
R5216:5218 Coq.Init.Datatypes <> nat ind
def 5282:5290 <> test_rev2
R5314:5316 Coq.Init.Logic <> :type_scope:x_'='_x not
R5295:5297 Poly <> rev def
R5305:5307 Poly <> nil constr
R5309:5312 Basics <> bool ind
R5299:5302 Basics <> bool ind
R5317:5319 Poly <> nil constr
R5321:5324 Basics <> bool ind
mod 5361:5369 <> MumbleBaz
ind 5492:5497 MumbleBaz mumble
constr 5513:5513 MumbleBaz a
constr 5528:5528 MumbleBaz b
constr 5560:5560 MumbleBaz c
R5517:5522 Poly <> mumble ind
R5549:5554 Poly <> mumble ind
R5542:5544 Coq.Init.Datatypes <> nat ind
R5532:5537 Poly <> mumble ind
R5564:5569 Poly <> mumble ind
ind 5582:5588 MumbleBaz grumble
constr 5613:5613 MumbleBaz d
constr 5641:5641 MumbleBaz e
R5627:5633 Poly <> grumble ind
R5617:5622 Poly MumbleBaz mumble ind
R5650:5656 Poly <> grumble ind
ind 6053:6055 MumbleBaz baz
constr 6072:6072 MumbleBaz x
constr 6092:6092 MumbleBaz y
R6083:6085 Poly <> baz ind
R6076:6078 Poly <> baz ind
R6111:6113 Poly <> baz ind
R6103:6106 Basics <> bool ind
R6096:6098 Poly <> baz ind
R6205:6213 Poly MumbleBaz <> mod
def 6476:6479 <> app'
R6491:6494 Poly <> list ind
R6496:6496 Poly <> X var
R6509:6510 Poly <> l1 var
R6521:6523 Poly <> nil constr
R6533:6534 Poly <> l2 var
R6540:6543 Poly <> cons constr
R6552:6555 Poly <> cons constr
R6562:6565 Poly <> app' def
R6571:6572 Poly <> l2 var
R6567:6567 Poly <> X var
R6557:6557 Poly <> X var
R6662:6665 Poly <> app' def
R6729:6731 Poly <> app def
def 9376:9382 <> length'
R9396:9399 Poly <> list ind
R9401:9401 Poly <> X var
R9406:9408 Coq.Init.Datatypes <> nat ind
R9421:9421 Poly <> l var
R9432:9434 Poly <> nil constr
R9450:9453 Poly <> cons constr
R9462:9462 Coq.Init.Datatypes <> S constr
R9465:9471 Poly <> length' def
def 9760:9766 <> list123
R9773:9776 Poly <> cons constr
R9785:9788 Poly <> cons constr
R9797:9800 Poly <> cons constr
R9809:9811 Poly <> nil constr
R9813:9815 Coq.Init.Datatypes <> nat ind
R9802:9804 Coq.Init.Datatypes <> nat ind
R9790:9792 Coq.Init.Datatypes <> nat ind
R9778:9780 Coq.Init.Datatypes <> nat ind
def 9889:9896 <> list123'
R9901:9904 Poly <> cons constr
R9911:9914 Poly <> cons constr
R9921:9924 Poly <> cons constr
R9931:9933 Poly <> nil constr
R10419:10421 Poly <> nil constr
R10419:10421 Poly <> nil constr
R10438:10441 Poly <> cons constr
R10438:10441 Poly <> cons constr
R10523:10528 Poly <> length def
R10523:10528 Poly <> length def
R10547:10549 Poly <> app def
R10547:10549 Poly <> app def
R10572:10574 Poly <> rev def
R10572:10574 Poly <> rev def
R10594:10597 Poly <> snoc def
R10594:10597 Poly <> snoc def
def 10659:10667 <> list123''
R10672:10675 Poly <> cons constr
R10680:10683 Poly <> cons constr
R10688:10691 Poly <> cons constr
R10695:10697 Poly <> nil constr
R10709:10714 Poly <> length def
R10716:10724 Poly <> list123'' def
def 10918:10925 <> length''
R10939:10942 Poly <> list ind
R10944:10944 Poly <> X var
R10949:10951 Coq.Init.Datatypes <> nat ind
R10964:10964 Poly <> l var
R10975:10977 Poly <> nil constr
R10993:10996 Poly <> cons constr
R11005:11005 Coq.Init.Datatypes <> S constr
R11008:11015 Poly <> length'' def
def 12042:12046 <> mynil
R12050:12053 Poly <> list ind
R12055:12057 Coq.Init.Datatypes <> nat ind
R12062:12064 Poly <> nil constr
R12193:12195 Poly <> nil constr
def 12210:12215 <> mynil'
R12221:12223 Poly <> nil constr
R12225:12227 Coq.Init.Datatypes <> nat ind
R12520:12523 Poly <> cons constr
not 12507 <> ::x_'::'_x
R12605:12607 Poly <> nil constr
not 12596 <> ::'['_']'
R12640:12643 Poly <> cons constr
R12651:12654 Poly <> cons constr
R12658:12659 Poly <> ::'['_']' not
not 12619 <> ::'['_x_';'_'..'_';'_x_']'
R12689:12691 Poly <> app def
not 12676 <> ::x_'++'_x
def 12824:12833 <> list123'''
R12838:12838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12840:12841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12843:12844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12846:12846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13199:13204 <> repeat
R13222:13222 Poly <> X var
R13234:13236 Coq.Init.Datatypes <> nat ind
R13241:13244 Poly <> list ind
R13246:13246 Poly <> X var
R13261:13265 Poly <> count var
R13278:13278 Coq.Init.Datatypes <> O constr
R13283:13285 Poly <> nil constr
R13293:13293 Coq.Init.Datatypes <> S constr
R13301:13305 Poly <> ::x_'::'_x not
R13316:13316 Poly <> ::x_'::'_x not
R13300:13300 Poly <> n var
R13306:13311 Poly <> repeat def
R13313:13313 Poly <> n var
def 13336:13347 <> test_repeat1
R13365:13367 Coq.Init.Logic <> :type_scope:x_'='_x not
R13352:13357 Poly <> repeat def
R13359:13362 Basics <> true constr
R13368:13371 Poly <> cons constr
R13379:13382 Poly <> cons constr
R13389:13391 Poly <> nil constr
R13384:13387 Basics <> true constr
R13373:13376 Basics <> true constr
prf 13444:13450 <> nil_app
R13478:13481 Poly <> list ind
R13483:13483 Poly <> X var
R13496:13498 Coq.Init.Logic <> :type_scope:x_'='_x not
R13488:13490 Poly <> app def
R13495:13495 Poly <> l var
R13492:13493 Poly <> ::'['_']' not
R13499:13499 Poly <> l var
prf 13567:13574 <> rev_snoc
R13627:13627 Poly <> X var
R13662:13665 Poly <> list ind
R13667:13667 Poly <> X var
R13686:13688 Coq.Init.Logic <> :type_scope:x_'='_x not
R13672:13674 Poly <> rev def
R13677:13680 Poly <> snoc def
R13684:13684 Poly <> v var
R13682:13682 Poly <> s var
R13690:13694 Poly <> ::x_'::'_x not
R13700:13700 Poly <> ::x_'::'_x not
R13689:13689 Poly <> v var
R13695:13697 Poly <> rev def
R13699:13699 Poly <> s var
prf 13931:13944 <> rev_involutive
R13976:13979 Poly <> list ind
R13981:13981 Poly <> X var
R13997:13999 Coq.Init.Logic <> :type_scope:x_'='_x not
R13986:13988 Poly <> rev def
R13991:13993 Poly <> rev def
R13995:13995 Poly <> l var
R14000:14000 Poly <> l var
R14164:14171 Poly <> rev_snoc thm
R14164:14171 Poly <> rev_snoc thm
prf 14230:14245 <> snoc_with_append
R14306:14309 Poly <> list ind
R14311:14311 Poly <> X var
R14350:14350 Poly <> X var
R14372:14374 Coq.Init.Logic <> :type_scope:x_'='_x not
R14355:14358 Poly <> snoc def
R14371:14371 Poly <> v var
R14363:14366 Poly <> ::x_'++'_x not
R14361:14362 Poly <> l1 var
R14367:14368 Poly <> l2 var
R14377:14381 Poly <> ::x_'++'_x not
R14391:14391 Poly <> ::x_'++'_x not
R14375:14376 Poly <> l1 var
R14382:14385 Poly <> snoc def
R14390:14390 Poly <> v var
R14387:14388 Poly <> l2 var
ind 14883:14886 <> prod
constr 14913:14916 <> pair
R14930:14933 Poly <> prod ind
R14951:14954 Poly <> pair constr
R14951:14954 Poly <> pair constr
R15101:15104 Poly <> pair constr
not 15085 <> ::'('_x_','_x_')'
R15237:15240 Poly <> prod ind
not 15225 <> :type_scope:x_'*'_x
def 15863:15865 <> fst
R15886:15888 Poly <> :type_scope:x_'*'_x not
R15885:15885 Poly <> X var
R15889:15889 Poly <> Y var
R15894:15894 Poly <> X var
R15907:15907 Poly <> p var
R15914:15914 Poly <> ::'('_x_','_x_')' not
R15916:15916 Poly <> ::'('_x_','_x_')' not
R15918:15918 Poly <> ::'('_x_','_x_')' not
def 15942:15944 <> snd
R15965:15967 Poly <> :type_scope:x_'*'_x not
R15964:15964 Poly <> X var
R15968:15968 Poly <> Y var
R15973:15973 Poly <> Y var
R15986:15986 Poly <> p var
R15993:15993 Poly <> ::'('_x_','_x_')' not
R15995:15995 Poly <> ::'('_x_','_x_')' not
R15997:15997 Poly <> ::'('_x_','_x_')' not
def 16338:16344 <> combine
R16365:16368 Poly <> list ind
R16370:16370 Poly <> X var
R16379:16382 Poly <> list ind
R16384:16384 Poly <> Y var
R16400:16403 Poly <> list ind
R16407:16407 Poly <> :type_scope:x_'*'_x not
R16406:16406 Poly <> X var
R16408:16408 Poly <> Y var
R16422:16422 Poly <> ::'('_x_','_x_')' not
R16425:16425 Poly <> ::'('_x_','_x_')' not
R16428:16428 Poly <> ::'('_x_','_x_')' not
R16423:16424 Poly <> lx var
R16426:16427 Poly <> ly var
R16439:16439 Poly <> ::'('_x_','_x_')' not
R16442:16442 Poly <> ::'('_x_','_x_')' not
R16444:16444 Poly <> ::'('_x_','_x_')' not
R16440:16441 Poly <> ::'['_']' not
R16449:16450 Poly <> ::'['_']' not
R16456:16456 Poly <> ::'('_x_','_x_')' not
R16458:16458 Poly <> ::'('_x_','_x_')' not
R16461:16461 Poly <> ::'('_x_','_x_')' not
R16459:16460 Poly <> ::'['_']' not
R16466:16467 Poly <> ::'['_']' not
R16473:16473 Poly <> ::'('_x_','_x_')' not
R16479:16480 Poly <> ::'('_x_','_x_')' not
R16486:16486 Poly <> ::'('_x_','_x_')' not
R16475:16476 Poly <> ::x_'::'_x not
R16482:16483 Poly <> ::x_'::'_x not
R16496:16500 Poly <> ::x_'::'_x not
R16514:16514 Poly <> ::x_'::'_x not
R16491:16491 Poly <> ::'('_x_','_x_')' not
R16493:16493 Poly <> ::'('_x_','_x_')' not
R16495:16495 Poly <> ::'('_x_','_x_')' not
R16501:16507 Poly <> combine def
def 17224:17228 <> split
R17259:17262 Poly <> list ind
R17266:17266 Poly <> :type_scope:x_'*'_x not
R17265:17265 Poly <> X var
R17267:17267 Poly <> Y var
R17284:17284 Poly <> :type_scope:x_'*'_x not
R17291:17295 Poly <> :type_scope:x_'*'_x not
R17302:17302 Poly <> :type_scope:x_'*'_x not
R17285:17288 Poly <> list ind
R17290:17290 Poly <> X var
R17296:17299 Poly <> list ind
R17301:17301 Poly <> Y var
R17317:17317 Poly <> l var
R17330:17332 Poly <> nil constr
R17337:17337 Poly <> ::'('_x_','_x_')' not
R17340:17341 Poly <> ::'('_x_','_x_')' not
R17344:17344 Poly <> ::'('_x_','_x_')' not
R17338:17339 Poly <> ::'['_']' not
R17342:17343 Poly <> ::'['_']' not
R17353:17356 Poly <> ::x_'::'_x not
R17362:17362 Poly <> ::'('_x_','_x_')' not
R17389:17390 Poly <> ::'('_x_','_x_')' not
R17417:17417 Poly <> ::'('_x_','_x_')' not
R17363:17363 Poly <> ::x_'::'_x not
R17369:17374 Poly <> ::x_'::'_x not
R17388:17388 Poly <> ::x_'::'_x not
R17364:17366 Poly <> fst def
R17375:17377 Poly <> fst def
R17380:17384 Poly <> split def
R17391:17391 Poly <> ::x_'::'_x not
R17397:17402 Poly <> ::x_'::'_x not
R17416:17416 Poly <> ::x_'::'_x not
R17392:17394 Poly <> snd def
R17403:17405 Poly <> snd def
R17408:17412 Poly <> split def
def 17437:17446 <> test_split
R17478:17480 Coq.Init.Logic <> :type_scope:x_'='_x not
R17451:17455 Poly <> split def
R17457:17457 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17467:17467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17477:17477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17468:17468 Poly <> ::'('_x_','_x_')' not
R17470:17470 Poly <> ::'('_x_','_x_')' not
R17476:17476 Poly <> ::'('_x_','_x_')' not
R17471:17475 Basics <> false constr
R17458:17458 Poly <> ::'('_x_','_x_')' not
R17460:17460 Poly <> ::'('_x_','_x_')' not
R17466:17466 Poly <> ::'('_x_','_x_')' not
R17461:17465 Basics <> false constr
R17481:17481 Poly <> ::'('_x_','_x_')' not
R17487:17487 Poly <> ::'('_x_','_x_')' not
R17501:17501 Poly <> ::'('_x_','_x_')' not
R17482:17482 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17484:17484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17486:17486 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17488:17488 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17494:17494 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17500:17500 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17495:17499 Basics <> false constr
R17489:17493 Basics <> false constr
ind 17818:17823 <> option
constr 17848:17851 <> Some
constr 17873:17876 <> None
R17860:17865 Poly <> option ind
R17880:17885 Poly <> option ind
R17901:17904 Poly <> Some constr
R17901:17904 Poly <> Some constr
R17924:17927 Poly <> None constr
R17924:17927 Poly <> None constr
def 18049:18053 <> index
R18071:18073 Coq.Init.Datatypes <> nat ind
R18096:18099 Poly <> list ind
R18101:18101 Poly <> X var
R18106:18111 Poly <> option ind
R18113:18113 Poly <> X var
R18126:18126 Poly <> l var
R18137:18138 Poly <> ::'['_']' not
R18143:18146 Poly <> None constr
R18153:18156 Poly <> ::x_'::'_x not
R18166:18172 Basics <> beq_nat def
R18176:18176 Coq.Init.Datatypes <> O constr
R18174:18174 Poly <> n var
R18195:18199 Poly <> index def
R18202:18205 Coq.Init.Peano <> pred def
R18207:18207 Poly <> n var
R18183:18186 Poly <> Some constr
def 18229:18239 <> test_index1
R18263:18266 Coq.Init.Logic <> :type_scope:x_'='_x not
R18246:18250 Poly <> index def
R18254:18254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18256:18256 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18258:18258 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18260:18260 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18262:18262 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18267:18270 Poly <> Some constr
def 18309:18319 <> test_index2
R18344:18347 Coq.Init.Logic <> :type_scope:x_'='_x not
R18326:18330 Poly <> index def
R18335:18335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18339:18339 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18343:18343 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18340:18340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18342:18342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18336:18336 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18338:18338 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18348:18351 Poly <> Some constr
R18353:18353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18355:18355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18392:18402 <> test_index3
R18424:18427 Coq.Init.Logic <> :type_scope:x_'='_x not
R18409:18413 Poly <> index def
R18418:18418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18423:18423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18419:18422 Basics <> true constr
R18428:18431 Poly <> None constr
def 18684:18689 <> hd_opt
R18707:18710 Poly <> list ind
R18712:18712 Poly <> X var
R18718:18723 Poly <> option ind
R18725:18725 Poly <> X var
R18740:18740 Poly <> l var
R18753:18755 Poly <> nil constr
R18760:18763 Poly <> None constr
R18772:18775 Poly <> ::x_'::'_x not
R18781:18784 Poly <> Some constr
R18925:18930 Poly <> hd_opt def
def 18942:18953 <> test_hd_opt1
R18970:18972 Coq.Init.Logic <> :type_scope:x_'='_x not
R18958:18963 Poly <> hd_opt def
R18965:18965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18967:18967 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18969:18969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18973:18976 Poly <> Some constr
def 19029:19040 <> test_hd_opt2
R19063:19066 Coq.Init.Logic <> :type_scope:x_'='_x not
R19046:19051 Poly <> hd_opt def
R19054:19054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19058:19058 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19062:19062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19059:19059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19061:19061 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19055:19055 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19057:19057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19067:19070 Poly <> Some constr
R19072:19072 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19074:19074 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19742:19751 <> doit3times
R19768:19768 Poly <> X var
R19765:19765 Poly <> X var
R19774:19774 Poly <> X var
R19779:19779 Poly <> X var
R19786:19786 Poly <> f var
R19789:19789 Poly <> f var
R19792:19792 Poly <> f var
R19794:19794 Poly <> n var
R19953:19962 Poly <> doit3times def
def 20034:20048 <> test_doit3times
R20072:20074 Coq.Init.Logic <> :type_scope:x_'='_x not
R20051:20060 Poly <> doit3times def
R20062:20069 Basics <> minustwo def
def 20113:20128 <> test_doit3times'
R20151:20153 Coq.Init.Logic <> :type_scope:x_'='_x not
R20131:20140 Poly <> doit3times def
R20147:20150 Basics <> true constr
R20142:20145 Basics <> negb def
R20154:20158 Basics <> false constr
R20452:20455 Coq.Init.Peano <> plus def
def 21177:21181 <> plus3
R21186:21189 Coq.Init.Peano <> plus def
R21200:21204 Poly <> plus3 def
def 21216:21225 <> test_plus3
R21239:21241 Coq.Init.Logic <> :type_scope:x_'='_x not
R21232:21236 Poly <> plus3 def
def 21279:21289 <> test_plus3'
R21313:21315 Coq.Init.Logic <> :type_scope:x_'='_x not
R21295:21304 Poly <> doit3times def
R21306:21310 Poly <> plus3 def
def 21353:21364 <> test_plus3''
R21390:21392 Coq.Init.Logic <> :type_scope:x_'='_x not
R21369:21378 Poly <> doit3times def
R21381:21384 Coq.Init.Peano <> plus def
def 22317:22326 <> prod_curry
R22359:22359 Poly <> Z var
R22351:22353 Poly <> :type_scope:x_'*'_x not
R22350:22350 Poly <> X var
R22354:22354 Poly <> Y var
R22367:22367 Poly <> X var
R22375:22375 Poly <> Y var
R22380:22380 Poly <> Z var
R22385:22385 Poly <> f var
R22387:22387 Poly <> ::'('_x_','_x_')' not
R22389:22390 Poly <> ::'('_x_','_x_')' not
R22392:22392 Poly <> ::'('_x_','_x_')' not
R22388:22388 Poly <> x var
R22391:22391 Poly <> y var
def 22537:22548 <> prod_uncurry
R22582:22582 Poly <> Z var
R22577:22577 Poly <> Y var
R22572:22572 Poly <> X var
R22591:22593 Poly <> :type_scope:x_'*'_x not
R22590:22590 Poly <> X var
R22594:22594 Poly <> Y var
R22599:22599 Poly <> Z var
R22609:22609 Poly <> f var
R22612:22614 Poly <> fst def
R22616:22616 Poly <> p var
R22621:22623 Poly <> snd def
R22625:22625 Poly <> p var
R22764:22773 Poly <> prod_curry def
R22783:22794 Poly <> prod_uncurry def
prf 22806:22818 <> uncurry_curry
R22859:22859 Poly <> Z var
R22854:22854 Poly <> Y var
R22849:22849 Poly <> X var
R22900:22902 Coq.Init.Logic <> :type_scope:x_'='_x not
R22869:22878 Poly <> prod_curry def
R22899:22899 Poly <> y var
R22897:22897 Poly <> x var
R22881:22892 Poly <> prod_uncurry def
R22894:22894 Poly <> f var
R22903:22903 Poly <> f var
R22907:22907 Poly <> y var
R22905:22905 Poly <> x var
R22952:22963 Poly <> prod_uncurry def
R22977:22986 Poly <> prod_curry def
prf 23031:23043 <> curry_uncurry
R23116:23116 Poly <> Z var
R23107:23109 Poly <> :type_scope:x_'*'_x not
R23106:23106 Poly <> X var
R23110:23110 Poly <> Y var
R23125:23127 Poly <> :type_scope:x_'*'_x not
R23124:23124 Poly <> X var
R23128:23128 Poly <> Y var
R23163:23165 Coq.Init.Logic <> :type_scope:x_'='_x not
R23134:23145 Poly <> prod_uncurry def
R23162:23162 Poly <> p var
R23148:23157 Poly <> prod_curry def
R23159:23159 Poly <> f var
R23166:23166 Poly <> f var
R23168:23168 Poly <> p var
R23211:23222 Poly <> prod_uncurry def
R23236:23245 Poly <> prod_curry def
def 23665:23670 <> filter
R23691:23694 Basics <> bool ind
R23688:23688 Poly <> X var
R23700:23703 Poly <> list ind
R23705:23705 Poly <> X var
R23727:23730 Poly <> list ind
R23732:23732 Poly <> X var
R23746:23746 Poly <> l var
R23757:23758 Poly <> ::'['_']' not
R23767:23768 Poly <> ::'['_']' not
R23775:23778 Poly <> ::x_'::'_x not
R23787:23790 Poly <> test var
R23855:23860 Poly <> filter def
R23862:23865 Poly <> test var
R23800:23804 Poly <> ::x_'::'_x not
R23818:23818 Poly <> ::x_'::'_x not
R23805:23810 Poly <> filter def
R23812:23815 Poly <> test var
def 24046:24057 <> test_filter1
R24082:24084 Coq.Init.Logic <> :type_scope:x_'='_x not
R24060:24065 Poly <> filter def
R24073:24073 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24075:24075 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24077:24077 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24079:24079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24081:24081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24067:24071 Basics <> evenb def
R24085:24085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24087:24087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24089:24089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24141:24151 <> length_is_1
R24169:24172 Poly <> list ind
R24174:24174 Poly <> X var
R24179:24182 Basics <> bool ind
R24189:24195 Basics <> beq_nat def
R24198:24203 Poly <> length def
R24205:24205 Poly <> l var
def 24220:24231 <> test_filter2
R24306:24310 Coq.Init.Logic <> :type_scope:x_'='_x not
R24238:24243 Poly <> filter def
R24268:24269 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24276:24277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24281:24282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24286:24287 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24295:24296 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24299:24300 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24304:24305 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24301:24301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24303:24303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24297:24298 Poly <> ::'['_']' not
R24288:24288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24290:24290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24292:24292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24294:24294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24283:24283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24285:24285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24278:24278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24280:24280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24270:24270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24272:24273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24275:24275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24245:24255 Poly <> length_is_1 def
R24311:24312 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24316:24317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24321:24322 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24326:24327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24323:24323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24325:24325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24318:24318 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24320:24320 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24313:24313 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24315:24315 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24498:24513 <> countoddmembers'
R24518:24521 Poly <> list ind
R24523:24525 Coq.Init.Datatypes <> nat ind
R24530:24532 Coq.Init.Datatypes <> nat ind
R24539:24544 Poly <> length def
R24547:24552 Poly <> filter def
R24559:24559 Poly <> l var
R24554:24557 Basics <> oddb def
def 24572:24593 <> test_countoddmembers'1
R24628:24630 Coq.Init.Logic <> :type_scope:x_'='_x not
R24598:24613 Poly <> countoddmembers' def
R24615:24615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24617:24617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24619:24619 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24621:24621 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24623:24623 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24625:24625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24627:24627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24668:24689 <> test_countoddmembers'2
R24718:24720 Coq.Init.Logic <> :type_scope:x_'='_x not
R24694:24709 Poly <> countoddmembers' def
R24711:24711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24713:24713 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24715:24715 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24717:24717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24758:24779 <> test_countoddmembers'3
R24804:24806 Coq.Init.Logic <> :type_scope:x_'='_x not
R24784:24799 Poly <> countoddmembers' def
R24801:24803 Poly <> nil constr
def 25673:25686 <> test_anon_fun'
R25720:25722 Coq.Init.Logic <> :type_scope:x_'='_x not
R25691:25700 Poly <> doit3times def
R25713:25715 Basics <> :nat_scope:x_'*'_x not
R25712:25712 Poly <> n var
R25716:25716 Poly <> n var
def 25859:25871 <> test_filter2'
R25966:25970 Coq.Init.Logic <> :type_scope:x_'='_x not
R25878:25883 Poly <> filter def
R25928:25929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25936:25937 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25941:25942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25946:25947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25955:25956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25959:25960 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25964:25965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25961:25961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25963:25963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25957:25958 Poly <> ::'['_']' not
R25948:25948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25950:25950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25952:25952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25954:25954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25943:25943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25945:25945 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25938:25938 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25940:25940 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25930:25930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25932:25933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25935:25935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25895:25901 Basics <> beq_nat def
R25904:25909 Poly <> length def
R25911:25911 Poly <> l var
R25971:25972 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25976:25977 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25981:25982 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25986:25987 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25983:25983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25985:25985 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25978:25978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25980:25980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25973:25973 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25975:25975 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26290:26304 <> filter_even_gt7
R26311:26314 Poly <> list ind
R26316:26318 Coq.Init.Datatypes <> nat ind
R26323:26326 Poly <> list ind
R26328:26330 Coq.Init.Datatypes <> nat ind
R26338:26343 Poly <> filter def
R26395:26395 Poly <> l var
R26355:26357 Coq.Init.Datatypes <> nat ind
R26364:26367 Basics <> andb def
R26384:26388 Basics <> evenb def
R26390:26390 Poly <> x var
R26370:26376 Basics <> ble_nat def
R26380:26380 Poly <> x var
def 26408:26429 <> test_filter_even_gt7_1
R26470:26472 Coq.Init.Logic <> :type_scope:x_'='_x not
R26435:26449 Poly <> filter_even_gt7 def
R26451:26451 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26453:26453 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26455:26455 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26457:26457 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26459:26459 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26462:26462 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26464:26464 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26467:26467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26469:26469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26473:26473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26476:26476 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26479:26479 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26481:26481 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26502:26516 Poly <> filter_even_gt7 def
def 26561:26582 <> test_filter_even_gt7_2
R26618:26620 Coq.Init.Logic <> :type_scope:x_'='_x not
R26588:26602 Poly <> filter_even_gt7 def
R26604:26604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26606:26606 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26608:26608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26610:26610 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26613:26613 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26617:26617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26621:26622 Poly <> ::'['_']' not
R26643:26657 Poly <> filter_even_gt7 def
def 27314:27322 <> partition
R27348:27351 Basics <> bool ind
R27343:27343 Poly <> X var
R27359:27362 Poly <> list ind
R27364:27364 Poly <> X var
R27396:27398 Poly <> :type_scope:x_'*'_x not
R27390:27393 Poly <> list ind
R27395:27395 Poly <> X var
R27399:27402 Poly <> list ind
R27404:27404 Poly <> X var
R27413:27414 Poly <> ::'('_x_','_x_')' not
R27428:27431 Poly <> ::'('_x_','_x_')' not
R27471:27472 Poly <> ::'('_x_','_x_')' not
R27415:27420 Poly <> filter def
R27427:27427 Poly <> l var
R27422:27425 Poly <> test var
R27432:27437 Poly <> filter def
R27470:27470 Poly <> l var
R27449:27449 Poly <> X var
R27455:27458 Basics <> negb def
R27461:27464 Poly <> test var
R27466:27466 Poly <> x var
def 27484:27498 <> test_partition1
R27527:27529 Coq.Init.Logic <> :type_scope:x_'='_x not
R27501:27509 Poly <> partition def
R27516:27516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27518:27518 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27520:27520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27522:27522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27524:27524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27526:27526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27511:27514 Basics <> oddb def
R27530:27530 Poly <> ::'('_x_','_x_')' not
R27538:27539 Poly <> ::'('_x_','_x_')' not
R27545:27545 Poly <> ::'('_x_','_x_')' not
R27531:27531 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27533:27533 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27535:27535 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27537:27537 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27540:27540 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27542:27542 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27544:27544 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27566:27574 Poly <> partition def
def 27618:27632 <> test_partition2
R27669:27671 Coq.Init.Logic <> :type_scope:x_'='_x not
R27635:27643 Poly <> partition def
R27662:27662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27664:27664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27666:27666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27668:27668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27655:27659 Basics <> false constr
R27672:27672 Poly <> ::'('_x_','_x_')' not
R27675:27676 Poly <> ::'('_x_','_x_')' not
R27684:27684 Poly <> ::'('_x_','_x_')' not
R27673:27674 Poly <> ::'['_']' not
R27677:27677 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27679:27679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27681:27681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27683:27683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27705:27713 Poly <> partition def
def 27906:27908 <> map
R27927:27927 Poly <> Y var
R27924:27924 Poly <> X var
R27933:27936 Poly <> list ind
R27938:27938 Poly <> X var
R27957:27960 Poly <> list ind
R27962:27962 Poly <> Y var
R27976:27976 Poly <> l var
R27987:27988 Poly <> ::'['_']' not
R27997:27998 Poly <> ::'['_']' not
R28005:28008 Poly <> ::x_'::'_x not
R28014:28014 Poly <> ::x_'::'_x not
R28018:28023 Poly <> ::x_'::'_x not
R28031:28031 Poly <> ::x_'::'_x not
R28015:28015 Poly <> f var
R28024:28026 Poly <> map def
R28028:28028 Poly <> f var
def 28259:28267 <> test_map1
R28290:28292 Coq.Init.Logic <> :type_scope:x_'='_x not
R28270:28272 Poly <> map def
R28283:28283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28285:28285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28287:28287 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28289:28289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28275:28278 Coq.Init.Peano <> plus def
R28293:28293 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28295:28295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28297:28297 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28299:28299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28608:28616 <> test_map2
R28637:28639 Coq.Init.Logic <> :type_scope:x_'='_x not
R28619:28621 Poly <> map def
R28628:28628 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28630:28630 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28632:28632 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28634:28634 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28636:28636 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28623:28626 Basics <> oddb def
R28640:28640 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28646:28646 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28651:28651 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28657:28657 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28662:28662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28658:28661 Basics <> true constr
R28652:28656 Basics <> false constr
R28647:28650 Basics <> true constr
R28641:28645 Basics <> false constr
def 28849:28857 <> test_map3
R28905:28909 Coq.Init.Logic <> :type_scope:x_'='_x not
R28864:28866 Poly <> map def
R28896:28896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28898:28898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28900:28900 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28902:28902 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28904:28904 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28878:28878 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28886:28886 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28893:28893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28887:28890 Basics <> oddb def
R28892:28892 Poly <> n var
R28879:28883 Basics <> evenb def
R28885:28885 Poly <> n var
R28910:28910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28923:28923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28936:28936 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28949:28949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28962:28962 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28950:28950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28956:28956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28961:28961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28957:28960 Basics <> true constr
R28951:28955 Basics <> false constr
R28937:28937 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28942:28942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28948:28948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28943:28947 Basics <> false constr
R28938:28941 Basics <> true constr
R28924:28924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28930:28930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28935:28935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28931:28934 Basics <> true constr
R28925:28929 Basics <> false constr
R28911:28911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28916:28916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28922:28922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28917:28921 Basics <> false constr
R28912:28915 Basics <> true constr
prf 29161:29167 <> map_rev
R29201:29201 Poly <> Y var
R29196:29196 Poly <> X var
R29209:29212 Poly <> list ind
R29214:29214 Poly <> X var
R29233:29235 Coq.Init.Logic <> :type_scope:x_'='_x not
R29220:29222 Poly <> map def
R29227:29229 Poly <> rev def
R29231:29231 Poly <> l var
R29224:29224 Poly <> f var
R29236:29238 Poly <> rev def
R29241:29243 Poly <> map def
R29247:29247 Poly <> l var
R29245:29245 Poly <> f var
R29441:29444 Poly <> list ind
R29474:29476 Coq.Init.Logic <> :type_scope:x_'='_x not
R29458:29460 Poly <> map def
R29465:29468 Poly <> snoc def
R29472:29472 Poly <> h var
R29470:29470 Poly <> l var
R29462:29462 Poly <> f var
R29477:29480 Poly <> snoc def
R29493:29493 Poly <> f var
R29495:29495 Poly <> h var
R29483:29485 Poly <> map def
R29489:29489 Poly <> l var
R29487:29487 Poly <> f var
R29441:29444 Poly <> list ind
R29474:29476 Coq.Init.Logic <> :type_scope:x_'='_x not
R29458:29460 Poly <> map def
R29465:29468 Poly <> snoc def
R29472:29472 Poly <> h var
R29470:29470 Poly <> l var
R29462:29462 Poly <> f var
R29477:29480 Poly <> snoc def
R29493:29493 Poly <> f var
R29495:29495 Poly <> h var
R29483:29485 Poly <> map def
R29489:29489 Poly <> l var
R29487:29487 Poly <> f var
def 30315:30322 <> flat_map
R30343:30346 Poly <> list ind
R30348:30348 Poly <> Y var
R30338:30338 Poly <> X var
R30354:30357 Poly <> list ind
R30359:30359 Poly <> X var
R30384:30387 Poly <> list ind
R30389:30389 Poly <> Y var
R30405:30405 Poly <> l var
R30418:30420 Poly <> nil constr
R30425:30426 Poly <> ::'['_']' not
R30435:30438 Poly <> ::x_'::'_x not
R30444:30444 Poly <> ::x_'++'_x not
R30448:30453 Poly <> ::x_'++'_x not
R30466:30466 Poly <> ::x_'++'_x not
R30445:30445 Poly <> f var
R30454:30461 Poly <> flat_map def
R30463:30463 Poly <> f var
def 30486:30499 <> test_flat_map1
R30539:30543 Coq.Init.Logic <> :type_scope:x_'='_x not
R30504:30511 Poly <> flat_map def
R30532:30532 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30534:30534 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30536:30536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30538:30538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30523:30523 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30525:30525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30527:30527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30529:30529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30528:30528 Poly <> n var
R30526:30526 Poly <> n var
R30524:30524 Poly <> n var
R30544:30544 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30546:30547 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30549:30550 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30552:30553 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30555:30556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30558:30559 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30561:30562 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30564:30565 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30567:30568 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30570:30570 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 30785:30794 <> option_map
R30819:30819 Poly <> Y var
R30814:30814 Poly <> X var
R30828:30833 Poly <> option ind
R30835:30835 Poly <> X var
R30862:30867 Poly <> option ind
R30869:30869 Poly <> Y var
R30882:30883 Poly <> xo var
R30896:30899 Poly <> None constr
R30904:30907 Poly <> None constr
R30915:30918 Poly <> Some constr
R30925:30928 Poly <> Some constr
R30931:30931 Poly <> f var
def 31753:31756 <> fold
R31779:31779 Poly <> Y var
R31776:31776 Poly <> Y var
R31773:31773 Poly <> X var
R31785:31788 Poly <> list ind
R31790:31790 Poly <> X var
R31796:31796 Poly <> Y var
R31801:31801 Poly <> Y var
R31814:31814 Poly <> l var
R31825:31827 Poly <> nil constr
R31832:31832 Poly <> b var
R31839:31842 Poly <> ::x_'::'_x not
R31848:31848 Poly <> f var
R31853:31856 Poly <> fold def
R31862:31862 Poly <> b var
R31858:31858 Poly <> f var
R32346:32349 Poly <> fold def
R32351:32354 Basics <> andb def
def 32416:32428 <> fold_example1
R32453:32455 Coq.Init.Logic <> :type_scope:x_'='_x not
R32432:32435 Poly <> fold def
R32442:32442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32444:32444 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32446:32446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32448:32448 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32450:32450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32437:32440 Coq.Init.Peano <> mult def
def 32494:32506 <> fold_example2
R32547:32549 Coq.Init.Logic <> :type_scope:x_'='_x not
R32510:32513 Poly <> fold def
R32543:32546 Basics <> true constr
R32520:32520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32525:32525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32530:32530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32536:32536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32541:32541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32537:32540 Basics <> true constr
R32531:32535 Basics <> false constr
R32526:32529 Basics <> true constr
R32521:32524 Basics <> true constr
R32515:32518 Basics <> andb def
R32550:32554 Basics <> false constr
def 32591:32603 <> fold_example3
R32638:32640 Coq.Init.Logic <> :type_scope:x_'='_x not
R32607:32610 Poly <> fold def
R32636:32637 Poly <> ::'['_']' not
R32617:32617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32621:32621 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32624:32624 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32630:32630 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32634:32634 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32631:32631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32633:32633 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32625:32625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32627:32627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32629:32629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32622:32623 Poly <> ::'['_']' not
R32618:32618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32620:32620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32612:32614 Poly <> app def
R32641:32641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32643:32643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32645:32645 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32647:32647 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32649:32649 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 33566:33573 <> constfun
R33589:33589 Poly <> X var
R33599:33599 Poly <> X var
R33594:33596 Coq.Init.Datatypes <> nat ind
R33613:33615 Coq.Init.Datatypes <> nat ind
R33621:33621 Poly <> x var
def 33636:33640 <> ftrue
R33645:33652 Poly <> constfun def
R33654:33657 Basics <> true constr
def 33669:33685 <> constfun_example1
R33696:33698 Coq.Init.Logic <> :type_scope:x_'='_x not
R33689:33693 Poly <> ftrue def
R33699:33702 Basics <> true constr
def 33739:33755 <> constfun_example2
R33774:33776 Coq.Init.Logic <> :type_scope:x_'='_x not
R33760:33767 Poly <> constfun def
def 34120:34127 <> override
R34148:34148 Poly <> X var
R34143:34145 Coq.Init.Datatypes <> nat ind
R34154:34156 Coq.Init.Datatypes <> nat ind
R34162:34162 Poly <> X var
R34172:34172 Poly <> X var
R34167:34169 Coq.Init.Datatypes <> nat ind
R34186:34188 Coq.Init.Datatypes <> nat ind
R34197:34203 Basics <> beq_nat def
R34207:34208 Poly <> k' var
R34205:34205 Poly <> k var
R34222:34222 Poly <> f var
R34224:34225 Poly <> k' var
R34215:34215 Poly <> x var
def 34424:34434 <> fmostlytrue
R34439:34446 Poly <> override def
R34475:34479 Basics <> false constr
R34449:34456 Poly <> override def
R34466:34470 Basics <> false constr
R34458:34462 Poly <> ftrue def
R34730:34734 Poly <> ftrue def
def 34758:34774 <> override_example1
R34791:34793 Coq.Init.Logic <> :type_scope:x_'='_x not
R34778:34788 Poly <> fmostlytrue def
R34794:34797 Basics <> true constr
def 34834:34850 <> override_example2
R34867:34869 Coq.Init.Logic <> :type_scope:x_'='_x not
R34854:34864 Poly <> fmostlytrue def
R34870:34874 Basics <> false constr
def 34911:34927 <> override_example3
R34944:34946 Coq.Init.Logic <> :type_scope:x_'='_x not
R34931:34941 Poly <> fmostlytrue def
R34947:34950 Basics <> true constr
def 34987:35003 <> override_example4
R35020:35022 Coq.Init.Logic <> :type_scope:x_'='_x not
R35007:35017 Poly <> fmostlytrue def
R35023:35027 Basics <> false constr
prf 35328:35343 <> override_example
R35357:35360 Basics <> bool ind
R35398:35400 Coq.Init.Logic <> :type_scope:x_'='_x not
R35367:35374 Poly <> override def
R35391:35394 Basics <> true constr
R35377:35384 Poly <> constfun def
R35386:35386 Poly <> b var
R35401:35401 Poly <> b var
R35436:35443 Poly <> override def
R35509:35516 Poly <> constfun def
R35577:35584 Poly <> constfun def
prf 36597:36614 <> unfold_example_bad
R36658:36660 Coq.Init.Logic <> :type_scope:x_'='_x not
R36654:36656 Basics <> :nat_scope:x_'+'_x not
R36647:36651 Poly <> plus3 def
R36653:36653 Poly <> n var
R36662:36664 Basics <> :nat_scope:x_'+'_x not
R36661:36661 Poly <> m var
R36637:36639 Coq.Init.Logic <> :type_scope:x_'='_x not
R36633:36635 Basics <> :nat_scope:x_'+'_x not
R36636:36636 Poly <> n var
R36640:36640 Poly <> m var
prf 37028:37041 <> unfold_example
R37085:37087 Coq.Init.Logic <> :type_scope:x_'='_x not
R37081:37083 Basics <> :nat_scope:x_'+'_x not
R37074:37078 Poly <> plus3 def
R37080:37080 Poly <> n var
R37089:37091 Basics <> :nat_scope:x_'+'_x not
R37088:37088 Poly <> m var
R37064:37066 Coq.Init.Logic <> :type_scope:x_'='_x not
R37060:37062 Basics <> :nat_scope:x_'+'_x not
R37063:37063 Poly <> n var
R37067:37067 Poly <> m var
R37127:37131 Poly <> plus3 def
prf 37348:37358 <> override_eq
R37390:37390 Poly <> X var
R37385:37387 Coq.Init.Datatypes <> nat ind
R37414:37416 Coq.Init.Logic <> :type_scope:x_'='_x not
R37397:37404 Poly <> override def
R37410:37410 Poly <> x var
R37408:37408 Poly <> k var
R37406:37406 Poly <> f var
R37413:37413 Poly <> k var
R37417:37417 Poly <> x var
R37454:37461 Poly <> override def
R37477:37488 Induction <> beq_nat_refl thm
R37477:37488 Induction <> beq_nat_refl thm
prf 37686:37697 <> override_neq
R37739:37739 Poly <> X var
R37734:37736 Coq.Init.Datatypes <> nat ind
R37808:37810 Coq.Init.Logic <> :type_scope:x_'='_x not
R37788:37795 Poly <> override def
R37802:37803 Poly <> x2 var
R37799:37800 Poly <> k2 var
R37797:37797 Poly <> f var
R37806:37807 Poly <> k1 var
R37811:37812 Poly <> x1 var
R37773:37775 Coq.Init.Logic <> :type_scope:x_'='_x not
R37760:37766 Basics <> beq_nat def
R37771:37772 Poly <> k1 var
R37768:37769 Poly <> k2 var
R37776:37780 Basics <> false constr
R37749:37751 Coq.Init.Logic <> :type_scope:x_'='_x not
R37745:37745 Poly <> f var
R37747:37748 Poly <> k1 var
R37752:37753 Poly <> x1 var
R37891:37898 Poly <> override def
def 38409:38419 <> fold_length
R38437:38440 Poly <> list ind
R38442:38442 Poly <> X var
R38447:38449 Coq.Init.Datatypes <> nat ind
R38456:38459 Poly <> fold def
R38478:38478 Poly <> l var
R38473:38473 Coq.Init.Datatypes <> S constr
R38475:38475 Poly <> n var
def 38492:38508 <> test_fold_length1
R38531:38533 Coq.Init.Logic <> :type_scope:x_'='_x not
R38512:38522 Poly <> fold_length def
R38524:38524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38526:38526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38528:38528 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38530:38530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 38619:38637 <> fold_length_correct
R38655:38658 Poly <> list ind
R38660:38660 Poly <> X var
R38679:38681 Coq.Init.Logic <> :type_scope:x_'='_x not
R38666:38676 Poly <> fold_length def
R38678:38678 Poly <> l var
R38682:38687 Poly <> length def
R38689:38689 Poly <> l var
R38793:38803 Poly <> fold_length def
R38919:38919 Poly <> X var
R38927:38930 Poly <> list ind
R38932:38932 Poly <> X var
R38956:38958 Coq.Init.Logic <> :type_scope:x_'='_x not
R38936:38946 Poly <> fold_length def
R38950:38953 Poly <> ::x_'::'_x not
R38949:38949 Poly <> h var
R38954:38954 Poly <> l var
R38959:38959 Coq.Init.Datatypes <> S constr
R38962:38972 Poly <> fold_length def
R38974:38974 Poly <> l var
R38919:38919 Poly <> X var
R38927:38930 Poly <> list ind
R38932:38932 Poly <> X var
R38956:38958 Coq.Init.Logic <> :type_scope:x_'='_x not
R38936:38946 Poly <> fold_length def
R38950:38953 Poly <> ::x_'::'_x not
R38949:38949 Poly <> h var
R38954:38954 Poly <> l var
R38959:38959 Coq.Init.Datatypes <> S constr
R38962:38972 Poly <> fold_length def
R38974:38974 Poly <> l var
R39050:39060 Poly <> fold_length def
def 39329:39336 <> fold_map
R39359:39359 Poly <> Y var
R39354:39354 Poly <> X var
R39367:39370 Poly <> list ind
R39372:39372 Poly <> X var
R39377:39380 Poly <> list ind
R39382:39382 Poly <> Y var
R39391:39394 Poly <> fold def
R39445:39447 Poly <> nil constr
R39443:39443 Poly <> l var
R39406:39406 Poly <> X var
R39416:39419 Poly <> list ind
R39421:39421 Poly <> Y var
R39434:39437 Poly <> ::x_'++'_x not
R39427:39428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39432:39433 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39429:39429 Poly <> f var
R39431:39431 Poly <> x var
R39438:39440 Poly <> lst var
R39468:39475 Poly <> fold_map def
R39502:39502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39504:39505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39507:39508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39510:39511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39513:39514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39516:39516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39487:39489 Coq.Init.Datatypes <> nat ind
R39496:39498 Basics <> :nat_scope:x_'+'_x not
R39495:39495 Poly <> n var
mod 40156:40161 <> Church
def 40506:40508 Church nat
R40547:40547 Poly <> X var
R40542:40542 Poly <> X var
R40536:40536 Poly <> X var
R40531:40531 Poly <> X var
def 40685:40687 Church one
R40691:40693 Poly Church nat def
R40726:40726 Poly <> X var
R40721:40721 Poly <> X var
R40734:40734 Poly <> X var
R40740:40740 Poly <> f var
R40742:40742 Poly <> x var
def 40811:40813 Church two
R40817:40819 Poly Church nat def
R40851:40851 Poly <> X var
R40846:40846 Poly <> X var
R40859:40859 Poly <> X var
R40865:40865 Poly <> f var
R40868:40868 Poly <> f var
R40870:40870 Poly <> x var
def 41024:41027 Church zero
R41031:41033 Poly Church nat def
R41065:41065 Poly <> X var
R41060:41060 Poly <> X var
R41073:41073 Poly <> X var
R41079:41079 Poly <> x var
def 41347:41351 Church three
R41355:41357 Poly Church nat def
R41363:41372 Poly Church doit3times def
def 41583:41586 Church succ
R41593:41595 Poly Church nat def
R41600:41602 Poly Church nat def
R41611:41615 Basics <> admit prfax
def 41627:41632 Church succ_1
R41645:41647 Coq.Init.Logic <> :type_scope:x_'='_x not
R41636:41639 Poly Church succ def
R41641:41644 Poly Church zero def
R41648:41650 Poly Church one def
def 41679:41684 Church succ_2
R41696:41698 Coq.Init.Logic <> :type_scope:x_'='_x not
R41688:41691 Poly Church succ def
R41693:41695 Poly Church one def
R41699:41701 Poly Church two def
def 41749:41754 Church succ_3
R41766:41768 Coq.Init.Logic <> :type_scope:x_'='_x not
R41758:41761 Poly Church succ def
R41763:41765 Poly Church two def
R41769:41773 Poly Church three def
def 41864:41867 Church plus
R41876:41878 Poly Church nat def
R41883:41885 Poly Church nat def
R41911:41915 Basics <> admit prfax
def 41927:41932 Church plus_1
R41949:41951 Coq.Init.Logic <> :type_scope:x_'='_x not
R41936:41939 Poly Church plus def
R41946:41948 Poly Church one def
R41941:41944 Poly Church zero def
R41952:41954 Poly Church one def
def 42002:42007 Church plus_2
R42025:42027 Coq.Init.Logic <> :type_scope:x_'='_x not
R42011:42014 Poly Church plus def
R42020:42024 Poly Church three def
R42016:42018 Poly Church two def
R42028:42031 Poly Church plus def
R42039:42041 Poly Church two def
R42033:42037 Poly Church three def
def 42089:42094 Church plus_3
R42125:42127 Coq.Init.Logic <> :type_scope:x_'='_x not
R42100:42103 Poly Church plus def
R42120:42124 Poly Church three def
R42106:42109 Poly Church plus def
R42115:42117 Poly Church two def
R42111:42113 Poly Church two def
R42128:42131 Poly Church plus def
R42138:42141 Poly Church plus def
R42149:42153 Poly Church three def
R42143:42147 Poly Church three def
R42133:42135 Poly Church one def
def 42228:42231 Church mult
R42240:42242 Poly Church nat def
R42247:42249 Poly Church nat def
R42276:42280 Basics <> admit prfax
def 42292:42297 Church mult_1
R42313:42315 Coq.Init.Logic <> :type_scope:x_'='_x not
R42301:42304 Poly Church mult def
R42310:42312 Poly Church one def
R42306:42308 Poly Church one def
R42316:42318 Poly Church one def
def 42366:42371 Church mult_2
R42403:42405 Coq.Init.Logic <> :type_scope:x_'='_x not
R42375:42378 Poly Church mult def
R42386:42389 Poly Church plus def
R42397:42401 Poly Church three def
R42391:42395 Poly Church three def
R42380:42383 Poly Church zero def
R42406:42409 Poly Church zero def
def 42457:42462 Church mult_3
R42480:42482 Coq.Init.Logic <> :type_scope:x_'='_x not
R42466:42469 Poly Church mult def
R42475:42479 Poly Church three def
R42471:42473 Poly Church two def
R42483:42486 Poly Church plus def
R42494:42498 Poly Church three def
R42488:42492 Poly Church three def
def 42821:42823 Church exp
R42832:42834 Poly Church nat def
R42839:42841 Poly Church nat def
R42867:42871 Basics <> admit prfax
def 42883:42887 Church exp_1
R42902:42904 Coq.Init.Logic <> :type_scope:x_'='_x not
R42891:42893 Poly Church exp def
R42899:42901 Poly Church two def
R42895:42897 Poly Church two def
R42905:42908 Poly Church plus def
R42914:42916 Poly Church two def
R42910:42912 Poly Church two def
def 42964:42968 Church exp_2
R42985:42987 Coq.Init.Logic <> :type_scope:x_'='_x not
R42972:42974 Poly Church exp def
R42982:42984 Poly Church two def
R42976:42980 Poly Church three def
R42988:42991 Poly Church plus def
R43019:43021 Poly Church one def
R42994:42997 Poly Church mult def
R43004:43007 Poly Church mult def
R43013:43015 Poly Church two def
R43009:43011 Poly Church two def
R42999:43001 Poly Church two def
def 43069:43073 Church exp_3
R43091:43093 Coq.Init.Logic <> :type_scope:x_'='_x not
R43077:43079 Poly Church exp def
R43087:43090 Poly Church zero def
R43081:43085 Poly Church three def
R43094:43096 Poly Church one def
R43140:43145 Poly Church <> mod
